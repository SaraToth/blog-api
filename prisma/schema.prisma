// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  ADMIN
  READER
}

model User {
  id  Int @id @default(autoincrement())
  type UserType
  firstName String @map("first_name")
  lastName String @map("last_name")
  email String @unique
  password String
  posts Post[]
  comments Comment[]
  @@map("users")
}

model Post {
  id Int @id @default(autoincrement())
  author User @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId Int @map("author_id")
  title String
  content String @db.Text
  comments Comment[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  @@map("posts")
}

model Comment {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int @map("user_id")
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId Int @map("post_id")
  content String @db.Text
  createdAt DateTime @default(now()) @map("created_at")
  @@map("comments")
}
